<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admarv.saas.mapper.UserAuthsMapper">
  <resultMap id="BaseResultMap" type="com.admarv.saas.model.UserAuths">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="pltfrm" jdbcType="CHAR" property="pltfrm" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auths
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.admarv.saas.model.UserAuths">
    insert into user_auths (id, user_id, pltfrm, 
      token, del_flag, create_by, 
      create_time, update_by, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{pltfrm,jdbcType=CHAR}, 
      #{token,jdbcType=VARCHAR}, #{delFlag,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.admarv.saas.model.UserAuths">
    update user_auths
    set user_id = #{userId,jdbcType=VARCHAR},
      pltfrm = #{pltfrm,jdbcType=CHAR},
      token = #{token,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, pltfrm, token, del_flag, create_by, create_time, update_by, update_time
    from user_auths
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, pltfrm, token, del_flag, create_by, create_time, update_by, update_time
    from user_auths
  </select>
  
  <select id="selectByEntity" parameterType="com.admarv.saas.model.UserAuths" resultMap="BaseResultMap">
     select * from user_auths where 1=1
      <if test="id != null">
       and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
       and user_id = #{userId,jdbcType=VARCHAR}
      </if>
      <if test="pltfrm != null">
       and pltfrm = #{pltfrm,jdbcType=VARCHAR}
      </if>
      <if test="token != null">
       and token = #{token,jdbcType=VARCHAR}
      </if>
      <if test="delFlag != null">
       and del_flag = #{delFlag,jdbcType=BIT}
      </if>
      <if test="createBy != null">
       and create_by = #{createBy,jdbcType=CHAR}
      </if>
      <if test="createTime != null">
       and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null">
       and update_by = #{updateBy,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null">
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </select>
    
  <select id="selectOneByEntity" parameterType="com.admarv.saas.model.UserAuths" resultMap="BaseResultMap">
     select * from user_auths where 1=1
      <if test="id != null">
       and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
       and user_id = #{userId,jdbcType=VARCHAR}
      </if>
      <if test="pltfrm != null">
       and pltfrm = #{pltfrm,jdbcType=VARCHAR}
      </if>
      <if test="token != null">
       and token = #{token,jdbcType=VARCHAR}
      </if>
        <if test="delFlag != null">
       and del_flag = #{delFlag,jdbcType=BIT}
      </if>
      <if test="createBy != null">
       and create_by = #{createBy,jdbcType=CHAR}
      </if>
      <if test="createTime != null">
       and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null">
       and update_by = #{updateBy,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null">
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admarv.saas.mapper.EmailInfoMapper">
  <resultMap id="BaseResultMap" type="com.admarv.saas.model.EmailInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from email_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.admarv.saas.model.EmailInfo">
    insert into email_info (id, user_id, email, 
      password, auth_code, platform, 
      del_flag, create_by, create_time, 
      update_by, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.admarv.saas.model.EmailInfo">
    update email_info
    set user_id = #{userId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, email, password, auth_code, platform, del_flag, create_by, create_time, 
    update_by, update_time
    from email_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, email, password, auth_code, platform, del_flag, create_by, create_time, 
    update_by, update_time
    from email_info
  </select>
  <select id="selectByEntity" parameterType="com.admarv.saas.model.EmailInfo" resultMap="BaseResultMap">
	select * from email_info where 1=1
	<if test="email != null">
	     and email = #{email,jdbcType=VARCHAR}
	</if>
	<if test="password != null">
	     and password = #{password,jdbcType=VARCHAR}
	</if>
	<if test="platform != null">
	     and platform = #{platform,jdbcType=VARCHAR}
	</if>
	<if test="userId != null">
	     and user_id = #{userId,jdbcType=VARCHAR}
	</if>
  	<if test="authCode != null">
	     and auth_code = #{authCode,jdbcType=VARCHAR}
	</if>
 </select>
 <select id="selectOneByEntity" parameterType="com.admarv.saas.model.EmailInfo" resultMap="BaseResultMap">
	select * from email_info where 1=1
	<if test="email != null">
	     and email = #{email,jdbcType=VARCHAR}
	</if>
	<if test="password != null">
	     and password = #{password,jdbcType=VARCHAR}
	</if>
	<if test="platform != null">
	     and platform = #{platform,jdbcType=VARCHAR}
	</if>
	<if test="userId != null">
	     and user_id = #{userId,jdbcType=VARCHAR}
	</if>
	<if test="authCode != null">
	     and auth_code = #{authCode,jdbcType=VARCHAR}
	</if>
  </select>
</mapper>
